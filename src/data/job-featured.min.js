import{useState,useEffect}from"react";import{db,auth}from"@/firebase";import{collection,getDocs,query,where}from"firebase/firestore";const useJobFeatures=()=>{const[jobFeatures,setJobFeatures]=useState([]),[loading,setLoading]=useState(!0);return useEffect((()=>{(async()=>{try{const user=auth.currentUser;if(!user)return console.error("User not authenticated"),void setLoading(!1);const jobsQuery=query(collection(db,"jobs"),where("userId","==",user.uid)),querySnapshot=await getDocs(jobsQuery),jobsArray=[];querySnapshot.forEach((doc=>{jobsArray.push({id:doc.id,...doc.data()})})),setJobFeatures(jobsArray)}catch(error){console.error("Error fetching job features: ",error.message),"permission-denied"===error.code&&console.error("Permission denied. Check Firestore rules.")}finally{setLoading(!1)}})()}),[]),{jobFeatures:jobFeatures,loading:loading}};export default useJobFeatures;